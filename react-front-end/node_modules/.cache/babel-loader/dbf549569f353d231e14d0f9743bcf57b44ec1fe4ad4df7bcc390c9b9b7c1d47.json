{"ast":null,"code":"var _jsxFileName = \"/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/src/components/EmployeeList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport axios from 'axios';\nimport SearchBar from './SearchBar'; // Import SearchBar\nimport EmployeeCard from './EmployeeCard'; // Import EmployeeCard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 10;\n\n// Helper function to generate some mock data for new fields\nconst getMockExtraData = employeeId => {\n  const departments = [\"Engineering\", \"Marketing\", \"Sales\", \"Human Resources\", \"Finance\"];\n  const baseYear = 2015;\n  const numericEmployeeId = Number(employeeId) || 0;\n  const shortBio = `Employee #${numericEmployeeId} has been a valuable member of the ${departments[numericEmployeeId % departments.length]} department since their hire. Known for dedication and a collaborative spirit.`;\n  const longBio = `Employee #${numericEmployeeId} joined our team on ${baseYear + numericEmployeeId % 8}-${String(numericEmployeeId % 12 + 1).padStart(2, '0')}-${String(numericEmployeeId % 28 + 1).padStart(2, '0')} and has since become an integral part of the ${departments[numericEmployeeId % departments.length]} department. \n    \nThroughout their tenure, Employee #${numericEmployeeId} has consistently demonstrated exceptional skills in project management and cross-functional team leadership. They have been instrumental in several key initiatives, contributing significantly to their success. \n    \nColleagues describe Employee #${numericEmployeeId} as a proactive problem-solver, always willing to lend a hand and share their expertise. Their positive attitude and commitment to excellence make them a role model within the team. Outside of work, Employee #${numericEmployeeId} enjoys hiking, photography, and volunteering in the local community, reflecting their well-rounded and engaged personality. This bio is intentionally made longer to test the scrollable text field functionality and ensure that the UI handles larger amounts of text gracefully. We are adding more sentences here to make sure it overflows.`;\n  return {\n    department: departments[numericEmployeeId % departments.length],\n    email: `employee${numericEmployeeId}@example.com`,\n    phoneNumber: `555-01${String(numericEmployeeId % 100).padStart(2, '0')}`,\n    hireDate: `${baseYear + numericEmployeeId % 8}-${String(numericEmployeeId % 12 + 1).padStart(2, '0')}-${String(numericEmployeeId % 28 + 1).padStart(2, '0')}`,\n    bio: numericEmployeeId % 3 === 0 ? longBio : shortBio\n  };\n};\nfunction EmployeeList() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [isLoadingState, setIsLoadingState] = useState(false);\n  const [hasMoreState, setHasMoreState] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalItemsFetchedSoFar, setTotalItemsFetchedSoFar] = useState(0);\n  const [editingEmployeeId, setEditingEmployeeId] = useState(null);\n  const [editFormData, setEditFormData] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeSearchId, setActiveSearchId] = useState('');\n  const isLoadingRef = useRef(isLoadingState);\n  const hasMoreRef = useRef(hasMoreState);\n  useEffect(() => {\n    isLoadingRef.current = isLoadingState;\n  }, [isLoadingState]);\n  useEffect(() => {\n    hasMoreRef.current = hasMoreState;\n  }, [hasMoreState]);\n  const fetchEmployeesAPI = useCallback(async function (pageToFetch) {\n    let searchIdToFetch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    if (isLoadingRef.current || pageToFetch > 0 && !hasMoreRef.current) {\n      console.log(`Fetch skipped: isLoading=${isLoadingRef.current}, pageToFetch=${pageToFetch}, hasMore=${hasMoreRef.current}, searchId: ${searchIdToFetch}`);\n      return;\n    }\n    console.log(`Fetching page: ${pageToFetch}, searchId: ${searchIdToFetch}`);\n    setIsLoadingState(true);\n    const params = {\n      page: pageToFetch,\n      size: PAGE_SIZE\n    };\n    if (searchIdToFetch && searchIdToFetch.trim() !== '') {\n      params.id = searchIdToFetch.trim();\n    }\n    try {\n      const response = await axios.get(`http://localhost:8080/api/employees`, {\n        params\n      });\n      const data = response.data;\n      console.log(\"API Response data:\", data);\n      if (data.content && data.content.length > 0) {\n        const newItemsCount = data.content.length;\n        setTotalItemsFetchedSoFar(prevTotal => pageToFetch === 0 ? newItemsCount : prevTotal + newItemsCount);\n        const augmentedContent = data.content.map(emp => ({\n          ...emp,\n          ...getMockExtraData(emp.id)\n        }));\n        setEmployees(prevEmployees => pageToFetch === 0 ? augmentedContent : [...prevEmployees, ...augmentedContent]);\n        setHasMoreState(!data.last);\n        setCurrentPage(pageToFetch + 1);\n      } else {\n        setHasMoreState(false);\n        if (pageToFetch === 0) {\n          setEmployees([]);\n          setTotalItemsFetchedSoFar(0);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch employees:\", error);\n      setHasMoreState(false);\n      if (pageToFetch === 0) {\n        setEmployees([]);\n        setTotalItemsFetchedSoFar(0);\n      }\n    } finally {\n      setIsLoadingState(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    console.log(`Effect for initial load or search change. ActiveSearchId: '${activeSearchId}'`);\n    setEmployees([]);\n    setCurrentPage(0);\n    setHasMoreState(true);\n    setIsLoadingState(false);\n    setTotalItemsFetchedSoFar(0);\n    fetchEmployeesAPI(0, activeSearchId);\n  }, [fetchEmployeesAPI, activeSearchId]);\n  const loadMoreEmployees = () => {\n    if (!isLoadingRef.current && hasMoreRef.current) {\n      fetchEmployeesAPI(currentPage, activeSearchId);\n    }\n  };\n  const handleEdit = employee => {\n    setEditingEmployeeId(employee.id);\n    setEditFormData({\n      ...employee\n    });\n  };\n  const handleCancelEdit = () => {\n    setEditingEmployeeId(null);\n    setEditFormData({});\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSave = async employeeId => {\n    const payload = {\n      firstName: editFormData.firstName,\n      lastName: editFormData.lastName,\n      birthDate: editFormData.birthDate,\n      department: editFormData.department,\n      email: editFormData.email,\n      phoneNumber: editFormData.phoneNumber,\n      hireDate: editFormData.hireDate,\n      bio: editFormData.bio\n    };\n    try {\n      const response = await axios.patch(`http://localhost:8080/api/employees/${employeeId}`, payload);\n      const updatedEmployeeFromServer = response.data;\n      const fullUpdatedEmployee = {\n        ...updatedEmployeeFromServer,\n        ...getMockExtraData(updatedEmployeeFromServer.id),\n        bio: payload.bio\n      };\n      setEmployees(prevEmployees => prevEmployees.map(emp => emp.id === employeeId ? fullUpdatedEmployee : emp));\n      setEditingEmployeeId(null);\n      setEditFormData({});\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error(\"Failed to update employee:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(`Error saving employee: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n    }\n  };\n  const handleSearchInputChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const executeSearch = () => {\n    if (searchTerm.trim() !== activeSearchId || searchTerm.trim() === '') {\n      setActiveSearchId(searchTerm.trim());\n    } else if (searchTerm.trim() === activeSearchId && searchTerm.trim() !== '') {\n      setEmployees([]);\n      setCurrentPage(0);\n      setHasMoreState(true);\n      setIsLoadingState(false);\n      setTotalItemsFetchedSoFar(0);\n      fetchEmployeesAPI(0, activeSearchId);\n    }\n  };\n  const handleClearSearch = () => {\n    setSearchTerm('');\n    if (activeSearchId !== '') {\n      setActiveSearchId('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Directory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: searchTerm,\n      onSearchInputChange: handleSearchInputChange,\n      onExecuteSearch: executeSearch,\n      onClearSearch: handleClearSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: totalItemsFetchedSoFar,\n      next: loadMoreEmployees,\n      hasMore: hasMoreState,\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading more employees...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }, this),\n      endMessage: !hasMoreState && employees.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        className: \"end-message\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"You've reached the end of the list!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 18\n      }, this),\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(EmployeeCard, {\n        employee: employee,\n        isEditing: editingEmployeeId === employee.id,\n        editFormData: editingEmployeeId === employee.id ? editFormData : {},\n        onInputChange: handleInputChange,\n        onEdit: handleEdit,\n        onSave: handleSave,\n        onCancelEdit: handleCancelEdit\n      }, employee.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this))\n    }, activeSearchId || 'all-employees', false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), !isLoadingState && employees.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-employees\",\n      children: hasMoreState ? activeSearchId ? \"Searching...\" : \"Fetching initial data...\" : activeSearchId ? `No employee found with ID: ${activeSearchId}` : \"No employees found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }, this), isLoadingState && employees.length === 0 && hasMoreState && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: activeSearchId ? `Searching for ID: ${activeSearchId}...` : \"Loading initial employees...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 7\n  }, this);\n}\n_s(EmployeeList, \"XJ2V1EZ1DcIpstyMd5eDyFd4FPk=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","InfiniteScroll","axios","SearchBar","EmployeeCard","jsxDEV","_jsxDEV","PAGE_SIZE","getMockExtraData","employeeId","departments","baseYear","numericEmployeeId","Number","shortBio","length","longBio","String","padStart","department","email","phoneNumber","hireDate","bio","EmployeeList","_s","employees","setEmployees","isLoadingState","setIsLoadingState","hasMoreState","setHasMoreState","currentPage","setCurrentPage","totalItemsFetchedSoFar","setTotalItemsFetchedSoFar","editingEmployeeId","setEditingEmployeeId","editFormData","setEditFormData","searchTerm","setSearchTerm","activeSearchId","setActiveSearchId","isLoadingRef","hasMoreRef","current","fetchEmployeesAPI","pageToFetch","searchIdToFetch","arguments","undefined","console","log","params","page","size","trim","id","response","get","data","content","newItemsCount","prevTotal","augmentedContent","map","emp","prevEmployees","last","error","loadMoreEmployees","handleEdit","employee","handleCancelEdit","handleInputChange","e","name","value","target","prevData","handleSave","payload","firstName","lastName","birthDate","patch","updatedEmployeeFromServer","fullUpdatedEmployee","_error$response","_error$response2","_error$response2$data","message","alert","handleSearchInputChange","executeSearch","handleClearSearch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearchInputChange","onExecuteSearch","onClearSearch","dataLength","next","hasMore","loader","endMessage","style","textAlign","isEditing","onInputChange","onEdit","onSave","onCancelEdit","_c","$RefreshReg$"],"sources":["/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/src/components/EmployeeList.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport axios from 'axios';\nimport SearchBar from './SearchBar'; // Import SearchBar\nimport EmployeeCard from './EmployeeCard'; // Import EmployeeCard\n\nconst PAGE_SIZE = 10;\n\n// Helper function to generate some mock data for new fields\nconst getMockExtraData = (employeeId) => {\n    const departments = [\"Engineering\", \"Marketing\", \"Sales\", \"Human Resources\", \"Finance\"];\n    const baseYear = 2015;\n    const numericEmployeeId = Number(employeeId) || 0; \n    \n    const shortBio = `Employee #${numericEmployeeId} has been a valuable member of the ${departments[numericEmployeeId % departments.length]} department since their hire. Known for dedication and a collaborative spirit.`;\n    const longBio = `Employee #${numericEmployeeId} joined our team on ${baseYear + (numericEmployeeId % 8)}-${String((numericEmployeeId % 12) + 1).padStart(2, '0')}-${String((numericEmployeeId % 28) + 1).padStart(2, '0')} and has since become an integral part of the ${departments[numericEmployeeId % departments.length]} department. \n    \nThroughout their tenure, Employee #${numericEmployeeId} has consistently demonstrated exceptional skills in project management and cross-functional team leadership. They have been instrumental in several key initiatives, contributing significantly to their success. \n    \nColleagues describe Employee #${numericEmployeeId} as a proactive problem-solver, always willing to lend a hand and share their expertise. Their positive attitude and commitment to excellence make them a role model within the team. Outside of work, Employee #${numericEmployeeId} enjoys hiking, photography, and volunteering in the local community, reflecting their well-rounded and engaged personality. This bio is intentionally made longer to test the scrollable text field functionality and ensure that the UI handles larger amounts of text gracefully. We are adding more sentences here to make sure it overflows.`;\n\n    return {\n        department: departments[numericEmployeeId % departments.length],\n        email: `employee${numericEmployeeId}@example.com`,\n        phoneNumber: `555-01${String(numericEmployeeId % 100).padStart(2, '0')}`,\n        hireDate: `${baseYear + (numericEmployeeId % 8)}-${String((numericEmployeeId % 12) + 1).padStart(2, '0')}-${String((numericEmployeeId % 28) + 1).padStart(2, '0')}`,\n        bio: numericEmployeeId % 3 === 0 ? longBio : shortBio\n    };\n};\n\n\nfunction EmployeeList() {\n  const [employees, setEmployees] = useState([]);\n  const [isLoadingState, setIsLoadingState] = useState(false);\n  const [hasMoreState, setHasMoreState] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalItemsFetchedSoFar, setTotalItemsFetchedSoFar] = useState(0);\n\n  const [editingEmployeeId, setEditingEmployeeId] = useState(null);\n  const [editFormData, setEditFormData] = useState({});\n\n  const [searchTerm, setSearchTerm] = useState(''); \n  const [activeSearchId, setActiveSearchId] = useState(''); \n\n  const isLoadingRef = useRef(isLoadingState);\n  const hasMoreRef = useRef(hasMoreState);\n\n  useEffect(() => {\n    isLoadingRef.current = isLoadingState;\n  }, [isLoadingState]);\n\n  useEffect(() => {\n    hasMoreRef.current = hasMoreState;\n  }, [hasMoreState]);\n\n  const fetchEmployeesAPI = useCallback(async (pageToFetch, searchIdToFetch = '') => {\n    if (isLoadingRef.current || (pageToFetch > 0 && !hasMoreRef.current)) {\n      console.log(`Fetch skipped: isLoading=${isLoadingRef.current}, pageToFetch=${pageToFetch}, hasMore=${hasMoreRef.current}, searchId: ${searchIdToFetch}`);\n      return;\n    }\n    console.log(`Fetching page: ${pageToFetch}, searchId: ${searchIdToFetch}`);\n    setIsLoadingState(true);\n    \n    const params = { page: pageToFetch, size: PAGE_SIZE };\n    if (searchIdToFetch && searchIdToFetch.trim() !== '') {\n      params.id = searchIdToFetch.trim();\n    }\n\n    try {\n      const response = await axios.get(`http://localhost:8080/api/employees`, { params });\n      const data = response.data;\n      console.log(\"API Response data:\", data);\n\n      if (data.content && data.content.length > 0) {\n        const newItemsCount = data.content.length;\n        setTotalItemsFetchedSoFar(prevTotal => (pageToFetch === 0 ? newItemsCount : prevTotal + newItemsCount));\n        \n        const augmentedContent = data.content.map(emp => ({\n            ...emp,\n            ...getMockExtraData(emp.id)\n        }));\n        setEmployees(prevEmployees => \n            pageToFetch === 0 ? augmentedContent : [...prevEmployees, ...augmentedContent]\n        );\n        setHasMoreState(!data.last);\n        setCurrentPage(pageToFetch + 1);\n      } else {\n        setHasMoreState(false);\n        if (pageToFetch === 0) {\n            setEmployees([]);\n            setTotalItemsFetchedSoFar(0);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch employees:\", error);\n      setHasMoreState(false);\n      if (pageToFetch === 0) {\n          setEmployees([]);\n          setTotalItemsFetchedSoFar(0);\n      }\n    } finally {\n      setIsLoadingState(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); \n\n  useEffect(() => {\n    console.log(`Effect for initial load or search change. ActiveSearchId: '${activeSearchId}'`);\n    setEmployees([]);\n    setCurrentPage(0);\n    setHasMoreState(true);\n    setIsLoadingState(false);\n    setTotalItemsFetchedSoFar(0);\n    fetchEmployeesAPI(0, activeSearchId);\n  }, [fetchEmployeesAPI, activeSearchId]);\n\n  const loadMoreEmployees = () => {\n    if (!isLoadingRef.current && hasMoreRef.current) {\n      fetchEmployeesAPI(currentPage, activeSearchId);\n    }\n  };\n\n  const handleEdit = (employee) => {\n    setEditingEmployeeId(employee.id);\n    setEditFormData({ ...employee }); \n  };\n\n  const handleCancelEdit = () => {\n    setEditingEmployeeId(null);\n    setEditFormData({});\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditFormData(prevData => ({ ...prevData, [name]: value }));\n  };\n\n  const handleSave = async (employeeId) => {\n    const payload = {\n        firstName: editFormData.firstName,\n        lastName: editFormData.lastName,\n        birthDate: editFormData.birthDate,\n        department: editFormData.department,\n        email: editFormData.email,\n        phoneNumber: editFormData.phoneNumber,\n        hireDate: editFormData.hireDate,\n        bio: editFormData.bio\n    };\n    try {\n      const response = await axios.patch(`http://localhost:8080/api/employees/${employeeId}`, payload);\n      const updatedEmployeeFromServer = response.data;\n      const fullUpdatedEmployee = {\n          ...updatedEmployeeFromServer,\n          ...getMockExtraData(updatedEmployeeFromServer.id), \n          bio: payload.bio \n      };\n\n      setEmployees(prevEmployees => \n        prevEmployees.map(emp => \n          emp.id === employeeId ? fullUpdatedEmployee : emp\n        )\n      );\n      setEditingEmployeeId(null);\n      setEditFormData({});\n    } catch (error) {\n      console.error(\"Failed to update employee:\", error.response?.data || error.message);\n      alert(`Error saving employee: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  const handleSearchInputChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const executeSearch = () => {\n    if (searchTerm.trim() !== activeSearchId || searchTerm.trim() === '') {\n        setActiveSearchId(searchTerm.trim());\n    } else if (searchTerm.trim() === activeSearchId && searchTerm.trim() !== '') {\n        setEmployees([]);\n        setCurrentPage(0);\n        setHasMoreState(true);\n        setIsLoadingState(false);\n        setTotalItemsFetchedSoFar(0);\n        fetchEmployeesAPI(0, activeSearchId);\n    }\n  };\n\n  const handleClearSearch = () => {\n    setSearchTerm('');\n    if (activeSearchId !== '') {\n        setActiveSearchId('');\n    }\n  };\n\n  return (\n      <div className=\"employee-list-container\">\n        <h1>Employee Directory</h1>\n\n        <SearchBar \n            searchTerm={searchTerm}\n            onSearchInputChange={handleSearchInputChange}\n            onExecuteSearch={executeSearch}\n            onClearSearch={handleClearSearch}\n        />\n\n        <InfiniteScroll\n          dataLength={totalItemsFetchedSoFar}\n          next={loadMoreEmployees}\n          hasMore={hasMoreState}\n          loader={<div className=\"loader\"><h4>Loading more employees...</h4></div>}\n          endMessage={\n            !hasMoreState && employees.length > 0 && (\n                 <p style={{ textAlign: 'center' }} className=\"end-message\">\n                    <b>You've reached the end of the list!</b>\n                 </p>\n            )\n          }\n          key={activeSearchId || 'all-employees'} \n        >\n          {employees.map(employee => (\n            <EmployeeCard \n                key={employee.id}\n                employee={employee}\n                isEditing={editingEmployeeId === employee.id}\n                editFormData={editingEmployeeId === employee.id ? editFormData : {}}\n                onInputChange={handleInputChange}\n                onEdit={handleEdit}\n                onSave={handleSave}\n                onCancelEdit={handleCancelEdit}\n            />\n          ))}\n        </InfiniteScroll>\n        \n        {!isLoadingState && employees.length === 0 && (\n          <p className=\"no-employees\">\n            {hasMoreState ? (activeSearchId ? \"Searching...\" : \"Fetching initial data...\") : (activeSearchId ? `No employee found with ID: ${activeSearchId}` : \"No employees found.\")}\n          </p>\n        )}\n        {isLoadingState && employees.length === 0 && hasMoreState && ( \n            <div className=\"loader\"><h4>{activeSearchId ? `Searching for ID: ${activeSearchId}...` : \"Loading initial employees...\"}</h4></div>\n        )}\n      </div>\n  );\n}\n\nexport default EmployeeList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}