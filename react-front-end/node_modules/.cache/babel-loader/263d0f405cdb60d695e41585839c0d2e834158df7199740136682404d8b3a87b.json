{"ast":null,"code":"import _toConsumableArray from\"/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useState,useEffect,useCallback,useRef}from'react';import{FixedSizeList as List}from'react-window';import AutoSizer from'react-virtualized-auto-sizer';// For responsive list size\n// --- Configuration ---\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ITEMS_PER_FETCH=50;var MAX_ITEMS_IN_LIST=300;var PRELOAD_OFFSET_ITEMS=25;// How many items from the edge before fetching\n// --- Placeholder API function ---\n// Replace this with your actual API call\nvar fetchItemsAPI=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(startIndex,count){var totalServerItems,items,i,itemIndex;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(\"Workspaceing items from \".concat(startIndex,\" to \").concat(startIndex+count-1));// Simulate API delay\n_context.next=3;return new Promise(function(resolve){return setTimeout(resolve,500);});case 3:// Simulate a very large dataset on the server\ntotalServerItems=10000;// Example total\nitems=[];i=0;case 6:if(!(i<count)){_context.next=14;break;}itemIndex=startIndex+i;if(!(itemIndex<0||itemIndex>=totalServerItems)){_context.next=10;break;}return _context.abrupt(\"continue\",11);case 10:items.push({id:\"item-\".concat(itemIndex),name:\"Item \".concat(itemIndex)});case 11:i++;_context.next=6;break;case 14:return _context.abrupt(\"return\",{items:items,totalServerItems:totalServerItems,// API should ideally return total for better calculations\nhasMoreBefore:startIndex>0,hasMoreAfter:startIndex+items.length<totalServerItems});case 15:case\"end\":return _context.stop();}},_callee);}));return function fetchItemsAPI(_x,_x2){return _ref.apply(this,arguments);};}();var BidirectionalInfiniteScrollList=function BidirectionalInfiniteScrollList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];// serverStartIndex tracks the index in the *overall* server dataset\n// that corresponds to the *start* of our local `items` array.\nvar _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),serverStartIndex=_useState6[0],setServerStartIndex=_useState6[1];var _useState7=useState(Infinity),_useState8=_slicedToArray(_useState7,2),totalServerItems=_useState8[0],setTotalServerItems=_useState8[1];// Initialize or get from first fetch\nvar listRef=useRef(null);var anExternalRef=useRef(null);// For AutoSizer\n// To prevent multiple fetches for the same range\nvar ongoingFetches=useRef({top:false,bottom:false});var loadMore=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(direction){var newItemsData,nextAPIFetchStartIndex,prevAPIFetchStartIndex,actualFetchedCount,newServerStartIndex;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!(isLoading||direction==='bottom'&&ongoingFetches.current.bottom||direction==='top'&&ongoingFetches.current.top)){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:setIsLoading(true);if(direction==='bottom')ongoingFetches.current.bottom=true;if(direction==='top')ongoingFetches.current.top=true;console.log(\"Load more: \".concat(direction,\", current serverStartIndex: \").concat(serverStartIndex,\", current items length: \").concat(items.length));if(!(direction==='bottom')){_context2.next=18;break;}nextAPIFetchStartIndex=serverStartIndex+items.length;if(!(nextAPIFetchStartIndex>=totalServerItems)){_context2.next=12;break;}setIsLoading(false);ongoingFetches.current.bottom=false;return _context2.abrupt(\"return\");case 12:_context2.next=14;return fetchItemsAPI(nextAPIFetchStartIndex,ITEMS_PER_FETCH);case 14:newItemsData=_context2.sent;setItems(function(prevItems){var combined=[].concat(_toConsumableArray(prevItems),_toConsumableArray(newItemsData.items));if(combined.length>MAX_ITEMS_IN_LIST){var excess=combined.length-MAX_ITEMS_IN_LIST;// Prune from the top\nsetServerStartIndex(function(prev){return prev+excess;});return combined.slice(excess);}return combined;});_context2.next=30;break;case 18:// direction === 'top'\nprevAPIFetchStartIndex=serverStartIndex-ITEMS_PER_FETCH;if(!(serverStartIndex===0)){_context2.next=23;break;}// Already at the beginning of the server data\nsetIsLoading(false);ongoingFetches.current.top=false;return _context2.abrupt(\"return\");case 23:_context2.next=25;return fetchItemsAPI(Math.max(0,prevAPIFetchStartIndex),ITEMS_PER_FETCH);case 25:newItemsData=_context2.sent;actualFetchedCount=newItemsData.items.length;newServerStartIndex=Math.max(0,serverStartIndex-actualFetchedCount);setItems(function(prevItems){var combined=[].concat(_toConsumableArray(newItemsData.items),_toConsumableArray(prevItems));if(combined.length>MAX_ITEMS_IN_LIST){// Prune from the bottom\nreturn combined.slice(0,MAX_ITEMS_IN_LIST);}return combined;});setServerStartIndex(newServerStartIndex);case 30:if(newItemsData&&newItemsData.totalServerItems){setTotalServerItems(newItemsData.totalServerItems);}setIsLoading(false);if(direction==='bottom')ongoingFetches.current.bottom=false;if(direction==='top')ongoingFetches.current.top=false;case 34:case\"end\":return _context2.stop();}},_callee2);}));return function(_x3){return _ref2.apply(this,arguments);};}(),[isLoading,items.length,serverStartIndex,totalServerItems]);// Initial fetch\nuseEffect(function(){var initialLoad=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var initialData;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:setIsLoading(true);_context3.next=3;return fetchItemsAPI(0,ITEMS_PER_FETCH*2);case 3:initialData=_context3.sent;// Fetch a bit more initially\nsetItems(initialData.items);setServerStartIndex(0);if(initialData.totalServerItems){setTotalServerItems(initialData.totalServerItems);}setIsLoading(false);// Scroll to a specific item or position after initial load if needed\n// For example, if you want to start viewing from the middle of a known dataset.\n// For now, we start at the top.\ncase 8:case\"end\":return _context3.stop();}},_callee3);}));return function initialLoad(){return _ref3.apply(this,arguments);};}();initialLoad();},[]);var onItemsRendered=function onItemsRendered(_ref4){var visibleStartIndex=_ref4.visibleStartIndex,visibleStopIndex=_ref4.visibleStopIndex,overscanStartIndex=_ref4.overscanStartIndex,overscanStopIndex=_ref4.overscanStopIndex;// --- Logic for fetching more items when scrolling down ---\n// serverStartIndex + visibleStopIndex gives the \"real\" index on the server\nvar absoluteVisibleStopIndex=serverStartIndex+visibleStopIndex;if(!isLoading&&!ongoingFetches.current.bottom&&items.length>0&&visibleStopIndex>=items.length-PRELOAD_OFFSET_ITEMS&&serverStartIndex+items.length<totalServerItems// Check if more items exist on server\n){console.log(\"Bottom trigger: VStop: \".concat(visibleStopIndex,\", items.len: \").concat(items.length,\", SrvStart: \").concat(serverStartIndex,\", TotalSrv: \").concat(totalServerItems));loadMore('bottom');}// --- Logic for fetching more items when scrolling up ---\nif(!isLoading&&!ongoingFetches.current.top&&items.length>0&&visibleStartIndex<=PRELOAD_OFFSET_ITEMS&&serverStartIndex>0// Check if more items exist on server (before current window)\n){console.log(\"Top trigger: VStart: \".concat(visibleStartIndex,\", SrvStart: \").concat(serverStartIndex));loadMore('top');}};// The Row component\nvar Row=function Row(_ref5){var index=_ref5.index,style=_ref5.style;var item=items[index];if(!item){return/*#__PURE__*/_jsx(\"div\",{style:style,className:\"list-item loading-item\",children:\"Loading...\"});}return/*#__PURE__*/_jsxs(\"div\",{style:style,className:\"list-item\",children:[item.name,\" (Local Index: \",index,\", Server Index: \",serverStartIndex+index,\")\"]});};return/*#__PURE__*/_jsxs(\"div\",{style:{height:'500px',width:'400px',border:'1px solid #ccc',margin:'20px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Server Start Index: \",serverStartIndex,\", Items in list: \",items.length,\", Total Server Items: \",totalServerItems===Infinity?'Unknown':totalServerItems]}),isLoading&&/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',padding:'10px'},children:\"Loading more items...\"}),/*#__PURE__*/_jsx(AutoSizer,{ref:anExternalRef,children:function children(_ref6){var height=_ref6.height,width=_ref6.width;return/*#__PURE__*/_jsx(List,{ref:listRef,height:height,width:width,itemCount:items.length,itemSize:50// Height of each item\n,onItemsRendered:onItemsRendered,children:Row});}}),/*#__PURE__*/_jsx(\"style\",{children:\"\\n        .list-item {\\n          display: flex;\\n          align-items: center;\\n          padding: 0 10px;\\n          border-bottom: 1px solid #eee;\\n          background-color: #fff;\\n        }\\n        .list-item:nth-child(odd) {\\n          background-color: #f9f9f9;\\n        }\\n        .loading-item {\\n          justify-content: center;\\n          color: #aaa;\\n        }\\n      \"})]});};export default BidirectionalInfiniteScrollList;","map":{"version":3,"names":["useState","useEffect","useCallback","useRef","FixedSizeList","List","AutoSizer","jsx","_jsx","jsxs","_jsxs","ITEMS_PER_FETCH","MAX_ITEMS_IN_LIST","PRELOAD_OFFSET_ITEMS","fetchItemsAPI","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","startIndex","count","totalServerItems","items","i","itemIndex","wrap","_callee$","_context","prev","next","console","log","concat","Promise","resolve","setTimeout","abrupt","push","id","name","hasMoreBefore","hasMoreAfter","length","stop","_x","_x2","apply","arguments","BidirectionalInfiniteScrollList","_useState","_useState2","_slicedToArray","setItems","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","serverStartIndex","setServerStartIndex","_useState7","Infinity","_useState8","setTotalServerItems","listRef","anExternalRef","ongoingFetches","top","bottom","loadMore","_ref2","_callee2","direction","newItemsData","nextAPIFetchStartIndex","prevAPIFetchStartIndex","actualFetchedCount","newServerStartIndex","_callee2$","_context2","current","sent","prevItems","combined","_toConsumableArray","excess","slice","Math","max","_x3","initialLoad","_ref3","_callee3","initialData","_callee3$","_context3","onItemsRendered","_ref4","visibleStartIndex","visibleStopIndex","overscanStartIndex","overscanStopIndex","absoluteVisibleStopIndex","Row","_ref5","index","style","item","className","children","height","width","border","margin","textAlign","padding","ref","_ref6","itemCount","itemSize"],"sources":["/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/src/Components/BidirectionalInfiniteScrollList.jsx"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport AutoSizer from 'react-virtualized-auto-sizer'; // For responsive list size\n\n// --- Configuration ---\nconst ITEMS_PER_FETCH = 50;\nconst MAX_ITEMS_IN_LIST = 300;\nconst PRELOAD_OFFSET_ITEMS = 25; // How many items from the edge before fetching\n\n// --- Placeholder API function ---\n// Replace this with your actual API call\nconst fetchItemsAPI = async (startIndex, count) => {\n  console.log(`Workspaceing items from ${startIndex} to ${startIndex + count - 1}`);\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n\n  // Simulate a very large dataset on the server\n  const totalServerItems = 10000; // Example total\n\n  const items = [];\n  for (let i = 0; i < count; i++) {\n    const itemIndex = startIndex + i;\n    if (itemIndex < 0 || itemIndex >= totalServerItems) {\n      // No more items in this direction\n      continue;\n    }\n    items.push({ id: `item-${itemIndex}`, name: `Item ${itemIndex}` });\n  }\n  return {\n    items,\n    totalServerItems, // API should ideally return total for better calculations\n    hasMoreBefore: startIndex > 0,\n    hasMoreAfter: startIndex + items.length < totalServerItems,\n  };\n};\n\nconst BidirectionalInfiniteScrollList = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // serverStartIndex tracks the index in the *overall* server dataset\n  // that corresponds to the *start* of our local `items` array.\n  const [serverStartIndex, setServerStartIndex] = useState(0);\n  const [totalServerItems, setTotalServerItems] = useState(Infinity); // Initialize or get from first fetch\n\n  const listRef = useRef(null);\n  const anExternalRef = useRef(null); // For AutoSizer\n\n  // To prevent multiple fetches for the same range\n  const ongoingFetches = useRef({ top: false, bottom: false });\n\n  const loadMore = useCallback(async (direction) => {\n    if (isLoading || (direction === 'bottom' && ongoingFetches.current.bottom) || (direction === 'top' && ongoingFetches.current.top)) {\n      return;\n    }\n\n    setIsLoading(true);\n    if (direction === 'bottom') ongoingFetches.current.bottom = true;\n    if (direction === 'top') ongoingFetches.current.top = true;\n\n    console.log(`Load more: ${direction}, current serverStartIndex: ${serverStartIndex}, current items length: ${items.length}`);\n\n    let newItemsData;\n    if (direction === 'bottom') {\n      const nextAPIFetchStartIndex = serverStartIndex + items.length;\n      if (nextAPIFetchStartIndex >= totalServerItems) {\n        setIsLoading(false);\n        ongoingFetches.current.bottom = false;\n        return; // No more items to fetch at the bottom\n      }\n      newItemsData = await fetchItemsAPI(nextAPIFetchStartIndex, ITEMS_PER_FETCH);\n\n      setItems(prevItems => {\n        const combined = [...prevItems, ...newItemsData.items];\n        if (combined.length > MAX_ITEMS_IN_LIST) {\n          const excess = combined.length - MAX_ITEMS_IN_LIST;\n          // Prune from the top\n          setServerStartIndex(prev => prev + excess);\n          return combined.slice(excess);\n        }\n        return combined;\n      });\n\n    } else { // direction === 'top'\n      const prevAPIFetchStartIndex = serverStartIndex - ITEMS_PER_FETCH;\n      if (serverStartIndex === 0) { // Already at the beginning of the server data\n          setIsLoading(false);\n          ongoingFetches.current.top = false;\n          return;\n      }\n\n      newItemsData = await fetchItemsAPI(Math.max(0, prevAPIFetchStartIndex), ITEMS_PER_FETCH);\n      const actualFetchedCount = newItemsData.items.length;\n      const newServerStartIndex = Math.max(0, serverStartIndex - actualFetchedCount);\n\n\n      setItems(prevItems => {\n        const combined = [...newItemsData.items, ...prevItems];\n        if (combined.length > MAX_ITEMS_IN_LIST) {\n          // Prune from the bottom\n          return combined.slice(0, MAX_ITEMS_IN_LIST);\n        }\n        return combined;\n      });\n      setServerStartIndex(newServerStartIndex);\n    }\n\n    if (newItemsData && newItemsData.totalServerItems) {\n      setTotalServerItems(newItemsData.totalServerItems);\n    }\n\n    setIsLoading(false);\n    if (direction === 'bottom') ongoingFetches.current.bottom = false;\n    if (direction === 'top') ongoingFetches.current.top = false;\n\n  }, [isLoading, items.length, serverStartIndex, totalServerItems]);\n\n  // Initial fetch\n  useEffect(() => {\n    const initialLoad = async () => {\n        setIsLoading(true);\n        const initialData = await fetchItemsAPI(0, ITEMS_PER_FETCH * 2); // Fetch a bit more initially\n        setItems(initialData.items);\n        setServerStartIndex(0);\n        if (initialData.totalServerItems) {\n            setTotalServerItems(initialData.totalServerItems);\n        }\n        setIsLoading(false);\n\n        // Scroll to a specific item or position after initial load if needed\n        // For example, if you want to start viewing from the middle of a known dataset.\n        // For now, we start at the top.\n    };\n    initialLoad();\n  }, []);\n\n\n  const onItemsRendered = ({\n    visibleStartIndex, // Index of the first visible item in the `items` array\n    visibleStopIndex,  // Index of the last visible item in the `items` array\n    overscanStartIndex, // Usually same as visibleStartIndex or slightly before\n    overscanStopIndex,  // Usually same as visibleStopIndex or slightly after\n  }) => {\n\n    // --- Logic for fetching more items when scrolling down ---\n    // serverStartIndex + visibleStopIndex gives the \"real\" index on the server\n    const absoluteVisibleStopIndex = serverStartIndex + visibleStopIndex;\n\n    if (\n      !isLoading &&\n      !ongoingFetches.current.bottom &&\n      items.length > 0 &&\n      visibleStopIndex >= items.length - PRELOAD_OFFSET_ITEMS &&\n      (serverStartIndex + items.length) < totalServerItems // Check if more items exist on server\n    ) {\n      console.log(`Bottom trigger: VStop: ${visibleStopIndex}, items.len: ${items.length}, SrvStart: ${serverStartIndex}, TotalSrv: ${totalServerItems}`);\n      loadMore('bottom');\n    }\n\n    // --- Logic for fetching more items when scrolling up ---\n    if (\n      !isLoading &&\n      !ongoingFetches.current.top &&\n      items.length > 0 &&\n      visibleStartIndex <= PRELOAD_OFFSET_ITEMS &&\n      serverStartIndex > 0 // Check if more items exist on server (before current window)\n    ) {\n      console.log(`Top trigger: VStart: ${visibleStartIndex}, SrvStart: ${serverStartIndex}`);\n      loadMore('top');\n    }\n  };\n\n  // The Row component\n  const Row = ({ index, style }) => {\n    const item = items[index];\n    if (!item) {\n      return (\n        <div style={style} className=\"list-item loading-item\">\n          Loading...\n        </div>\n      );\n    }\n    return (\n      <div style={style} className=\"list-item\">\n        {item.name} (Local Index: {index}, Server Index: {serverStartIndex + index})\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ height: '500px', width: '400px', border: '1px solid #ccc', margin: '20px' }}>\n      <p>Server Start Index: {serverStartIndex}, Items in list: {items.length}, Total Server Items: {totalServerItems === Infinity ? 'Unknown' : totalServerItems}</p>\n      {isLoading && <div style={{textAlign: 'center', padding: '10px'}}>Loading more items...</div>}\n      <AutoSizer ref={anExternalRef}>\n        {({ height, width }) => (\n          <List\n            ref={listRef}\n            height={height}\n            width={width}\n            itemCount={items.length}\n            itemSize={50} // Height of each item\n            onItemsRendered={onItemsRendered}\n          >\n            {Row}\n          </List>\n        )}\n      </AutoSizer>\n      <style>{`\n        .list-item {\n          display: flex;\n          align-items: center;\n          padding: 0 10px;\n          border-bottom: 1px solid #eee;\n          background-color: #fff;\n        }\n        .list-item:nth-child(odd) {\n          background-color: #f9f9f9;\n        }\n        .loading-item {\n          justify-content: center;\n          color: #aaa;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default BidirectionalInfiniteScrollList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}