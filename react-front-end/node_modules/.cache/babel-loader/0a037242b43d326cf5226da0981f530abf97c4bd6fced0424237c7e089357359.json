{"ast":null,"code":"var _jsxFileName = \"/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/src/Components/EmployeeList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport axios from 'axios'; // Import axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 10; // Define page size, should align with backend pagination\nconst MAX_RECORDS_IN_MEMORY = 500; // Maximum number of records to keep in memory/on page\n\n// Placeholder for CSS styles if not using a separate file\nconst styles = `\n.employee-list-container {\n  max-width: 900px;\n  margin: 30px auto;\n  padding: 25px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-color: #f4f7f6;\n  border-radius: 10px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n}\n\n.employee-list-container h1 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 25px;\n}\n\n/* Styles for the table */\n.employee-table-wrapper { /* Optional: if you need a wrapper for the table for specific styling like overflow */\n  width: 100%;\n  overflow-x: auto; /* For responsiveness if table is too wide */\n}\n\n.employee-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n  background-color: #ffffff;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\n  border-radius: 8px; \n  overflow: hidden; \n}\n\n.employee-table th,\n.employee-table td {\n  border: 1px solid #e0e0e0;\n  padding: 12px 15px;\n  text-align: left;\n  font-size: 0.95em;\n}\n\n.employee-table th {\n  background-color: #0056b3; \n  color: #ffffff; \n  font-weight: 600;\n  position: sticky; \n  top: 0; \n  z-index: 10; /* Ensure header stays above content when sticky */\n}\n\n.employee-table tbody tr:nth-child(even) {\n  background-color: #f9f9f9; \n}\n\n.employee-table tbody tr:hover {\n  background-color: #f1f1f1; \n  transition: background-color 0.2s ease-in-out;\n}\n\n.employee-table td {\n  color: #333;\n}\n\n\n.loader,\n.end-message,\n.no-employees {\n  padding: 25px;\n  text-align: center;\n  color: #666;\n  font-style: italic;\n}\n\n.no-employees {\n  font-weight: bold;\n}\n`;\nfunction EmployeeList() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [isLoadingState, setIsLoadingState] = useState(false);\n  const [hasMoreState, setHasMoreState] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0);\n  const isLoadingRef = useRef(isLoadingState);\n  const hasMoreRef = useRef(hasMoreState);\n  useEffect(() => {\n    isLoadingRef.current = isLoadingState;\n  }, [isLoadingState]);\n  useEffect(() => {\n    hasMoreRef.current = hasMoreState;\n  }, [hasMoreState]);\n  const fetchEmployeesAPI = useCallback(async pageToFetch => {\n    if (isLoadingRef.current || pageToFetch > 0 && !hasMoreRef.current) {\n      return;\n    }\n    setIsLoadingState(true);\n    try {\n      const response = await axios.get(`http://localhost:8080/api/employees`, {\n        params: {\n          page: pageToFetch,\n          size: PAGE_SIZE\n        }\n      });\n      const data = response.data;\n      if (data.content && data.content.length > 0) {\n        setEmployees(prevEmployees => {\n          const newCombinedEmployees = pageToFetch === 0 ? data.content : [...prevEmployees, ...data.content];\n          if (newCombinedEmployees.length > MAX_RECORDS_IN_MEMORY) {\n            return newCombinedEmployees.slice(newCombinedEmployees.length - MAX_RECORDS_IN_MEMORY);\n          }\n          return newCombinedEmployees;\n        });\n        setHasMoreState(!data.last);\n        setCurrentPage(pageToFetch + 1);\n      } else {\n        setHasMoreState(false);\n        if (pageToFetch === 0) {\n          setEmployees([]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch employees:\", error);\n      if (axios.isAxiosError(error)) {\n        var _error$response;\n        console.error(\"Axios error details:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n      setHasMoreState(false);\n    } finally {\n      setIsLoadingState(false);\n    }\n  }, []);\n  useEffect(() => {\n    setEmployees([]);\n    setCurrentPage(0);\n    setHasMoreState(true);\n    setIsLoadingState(false);\n    fetchEmployeesAPI(0);\n  }, [fetchEmployeesAPI]);\n  const loadMoreEmployees = () => {\n    if (!isLoadingRef.current && hasMoreRef.current) {\n      fetchEmployeesAPI(currentPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: styles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-list-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Employee Directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: employees.length,\n        next: loadMoreEmployees,\n        hasMore: hasMoreState,\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading more employees...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 19\n        }, this),\n        endMessage: !hasMoreState && employees.length > 0 &&\n        /*#__PURE__*/\n        // Show end message only if there are items and no more to load\n        _jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: \"end-message\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"You've reached the end of the list!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 18\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employee-table-wrapper\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"employee-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Birth Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.birthDate ? new Date(employee.birthDate).toLocaleDateString() : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this)]\n              }, employee.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), !isLoadingState && employees.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-employees\",\n        children: hasMoreState ? \"Fetching initial data...\" : \"No employees found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), isLoadingState && employees.length === 0 && !hasMoreState && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading initial employees...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EmployeeList, \"nU0ffWbEaSXSc+qvKXjlN7zleI4=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","InfiniteScroll","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PAGE_SIZE","MAX_RECORDS_IN_MEMORY","styles","EmployeeList","_s","employees","setEmployees","isLoadingState","setIsLoadingState","hasMoreState","setHasMoreState","currentPage","setCurrentPage","isLoadingRef","hasMoreRef","current","fetchEmployeesAPI","pageToFetch","response","get","params","page","size","data","content","length","prevEmployees","newCombinedEmployees","slice","last","error","console","isAxiosError","_error$response","message","loadMoreEmployees","children","fileName","_jsxFileName","lineNumber","columnNumber","className","dataLength","next","hasMore","loader","endMessage","style","textAlign","map","employee","id","firstName","lastName","birthDate","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/src/Components/EmployeeList.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport axios from 'axios'; // Import axios\n\nconst PAGE_SIZE = 10; // Define page size, should align with backend pagination\nconst MAX_RECORDS_IN_MEMORY = 500; // Maximum number of records to keep in memory/on page\n\n// Placeholder for CSS styles if not using a separate file\nconst styles = `\n.employee-list-container {\n  max-width: 900px;\n  margin: 30px auto;\n  padding: 25px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-color: #f4f7f6;\n  border-radius: 10px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n}\n\n.employee-list-container h1 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 25px;\n}\n\n/* Styles for the table */\n.employee-table-wrapper { /* Optional: if you need a wrapper for the table for specific styling like overflow */\n  width: 100%;\n  overflow-x: auto; /* For responsiveness if table is too wide */\n}\n\n.employee-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n  background-color: #ffffff;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\n  border-radius: 8px; \n  overflow: hidden; \n}\n\n.employee-table th,\n.employee-table td {\n  border: 1px solid #e0e0e0;\n  padding: 12px 15px;\n  text-align: left;\n  font-size: 0.95em;\n}\n\n.employee-table th {\n  background-color: #0056b3; \n  color: #ffffff; \n  font-weight: 600;\n  position: sticky; \n  top: 0; \n  z-index: 10; /* Ensure header stays above content when sticky */\n}\n\n.employee-table tbody tr:nth-child(even) {\n  background-color: #f9f9f9; \n}\n\n.employee-table tbody tr:hover {\n  background-color: #f1f1f1; \n  transition: background-color 0.2s ease-in-out;\n}\n\n.employee-table td {\n  color: #333;\n}\n\n\n.loader,\n.end-message,\n.no-employees {\n  padding: 25px;\n  text-align: center;\n  color: #666;\n  font-style: italic;\n}\n\n.no-employees {\n  font-weight: bold;\n}\n`;\n\nfunction EmployeeList() {\n  const [employees, setEmployees] = useState([]);\n  const [isLoadingState, setIsLoadingState] = useState(false);\n  const [hasMoreState, setHasMoreState] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const isLoadingRef = useRef(isLoadingState);\n  const hasMoreRef = useRef(hasMoreState);\n\n  useEffect(() => {\n    isLoadingRef.current = isLoadingState;\n  }, [isLoadingState]);\n\n  useEffect(() => {\n    hasMoreRef.current = hasMoreState;\n  }, [hasMoreState]);\n\n  const fetchEmployeesAPI = useCallback(async (pageToFetch) => {\n    if (isLoadingRef.current || (pageToFetch > 0 && !hasMoreRef.current)) {\n      return;\n    }\n    setIsLoadingState(true);\n    try {\n      const response = await axios.get(`http://localhost:8080/api/employees`, {\n        params: {\n          page: pageToFetch,\n          size: PAGE_SIZE\n        }\n      });\n      const data = response.data;\n      if (data.content && data.content.length > 0) {\n        setEmployees(prevEmployees => {\n          const newCombinedEmployees = pageToFetch === 0 ? data.content : [...prevEmployees, ...data.content];\n          if (newCombinedEmployees.length > MAX_RECORDS_IN_MEMORY) {\n            return newCombinedEmployees.slice(newCombinedEmployees.length - MAX_RECORDS_IN_MEMORY);\n          }\n          return newCombinedEmployees;\n        });\n        setHasMoreState(!data.last);\n        setCurrentPage(pageToFetch + 1);\n      } else {\n        setHasMoreState(false);\n        if (pageToFetch === 0) {\n            setEmployees([]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch employees:\", error);\n      if (axios.isAxiosError(error)) {\n        console.error(\"Axios error details:\", error.response?.data || error.message);\n      }\n      setHasMoreState(false);\n    } finally {\n      setIsLoadingState(false);\n    }\n  }, []); \n\n  useEffect(() => {\n    setEmployees([]);\n    setCurrentPage(0);\n    setHasMoreState(true);\n    setIsLoadingState(false); \n    fetchEmployeesAPI(0);\n  }, [fetchEmployeesAPI]);\n\n  const loadMoreEmployees = () => {\n    if (!isLoadingRef.current && hasMoreRef.current) {\n      fetchEmployeesAPI(currentPage);\n    }\n  };\n\n  return (\n    <>\n      <style>{styles}</style>\n      <div className=\"employee-list-container\"> {/* Main outer div */}\n        <h1>Employee Directory</h1>\n        <InfiniteScroll\n          dataLength={employees.length}\n          next={loadMoreEmployees}\n          hasMore={hasMoreState}\n          loader={<div className=\"loader\"><h4>Loading more employees...</h4></div>}\n          endMessage={\n            !hasMoreState && employees.length > 0 && ( // Show end message only if there are items and no more to load\n                 <p style={{ textAlign: 'center' }} className=\"end-message\">\n                    <b>You've reached the end of the list!</b>\n                 </p>\n            )\n          }\n        >\n          {/* Table structure for displaying employees */}\n          <div className=\"employee-table-wrapper\"> {/* Added wrapper for potential horizontal scroll on small screens */}\n            <table className=\"employee-table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>First Name</th>\n                  <th>Last Name</th>\n                  <th>Birth Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {employees.map(employee => (\n                  <tr key={employee.id}>\n                    <td>{employee.id}</td>\n                    <td>{employee.firstName}</td>\n                    <td>{employee.lastName}</td>\n                    <td>{employee.birthDate ? new Date(employee.birthDate).toLocaleDateString() : 'N/A'}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </InfiniteScroll>\n        {/* Conditional rendering for \"No employees found\" or initial loading messages */}\n        {!isLoadingState && employees.length === 0 && (\n          <p className=\"no-employees\">\n            {hasMoreState ? \"Fetching initial data...\" : \"No employees found.\"}\n          </p>\n        )}\n        {/* This loader is for the very initial load if the list is empty, \n            InfiniteScroll's loader handles subsequent loads */}\n        {isLoadingState && employees.length === 0 && !hasMoreState && ( \n            <div className=\"loader\"><h4>Loading initial employees...</h4></div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default EmployeeList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}