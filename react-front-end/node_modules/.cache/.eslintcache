[{"/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/index.js":"1","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/App.js":"2","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/reportWebVitals.js":"3","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Components/CreateOrUpdateEmployee.jsx":"4","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Components/HeaderComponent.jsx":"5","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Components/FooterComponent.jsx":"6","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Components/ListEmployee.jsx":"7","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Components/ViewEmployee.jsx":"8","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Services/EmployeeService.js":"9"},{"size":582,"mtime":1747012915566,"results":"10","hashOfConfig":"11"},{"size":847,"mtime":1747012915565,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1747012915566,"results":"13","hashOfConfig":"11"},{"size":3769,"mtime":1747012915565,"results":"14","hashOfConfig":"11"},{"size":497,"mtime":1747012915566,"results":"15","hashOfConfig":"11"},{"size":223,"mtime":1747012915565,"results":"16","hashOfConfig":"11"},{"size":2356,"mtime":1747012915566,"results":"17","hashOfConfig":"11"},{"size":1302,"mtime":1747012915566,"results":"18","hashOfConfig":"11"},{"size":636,"mtime":1747019634499,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"199nd14",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/index.js",[],[],"/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/App.js",[],[],"/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/reportWebVitals.js",[],[],"/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Components/CreateOrUpdateEmployee.jsx",["51"],[],"import { useEffect, useState } from \"react\";\nimport EmployeeService from \"../Services/EmployeeService\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst CreateOrUpdateEmployee = () => {\n    const navigate = useNavigate();\n    const {id} = useParams();\n    const [firstName,setFirstName] = useState(\"\");\n    const [lastName,setLastName] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const changeFirstNameHandler = (event) => {\n        setFirstName(event.target.value)\n    }\n    const changeLastNameHandler = (event) => {\n        setLastName(event.target.value);\n    }\n    const changeEmailHandler = (event) => {\n        setEmail(event.target.value);\n    }\n    const saveOrUpdateEmployee = (e) => {\n        e.preventDefault();\n        const employee = {firstName: firstName,lastName:lastName,email:email};\n        console.log(employee);\n        if(id < 0){\n            EmployeeService.createEmployee(employee).then(()=>{\n                navigate(\"/\");\n            });\n        } else {\n            EmployeeService.updateEmployee(id,employee).then(()=>{\n                navigate(\"/\");\n            });\n        }\n    }\n    const cancel = () => {\n        navigate(\"/\")\n    }\n    useEffect(()=>{\n        if(id < 0) {\n            return;\n        }\n        EmployeeService.getEmployeeById(id).then(res => {\n            const employee = res.data;\n            setFirstName(employee.firstName);\n            setLastName(employee.lastName);\n            setEmail(employee.email);\n        }).catch(err => console.log(err));\n    },[]);\n    \n    return(\n        <>\n        <div className=\"container\" style={{ marginTop: \"4rem\" }}>\n    <div className=\"row\">\n        <div className=\"card col-md-6 offset-md-3\">\n            <h3 className=\"text-center\">{id < 0 ? \"Add\" : \"Update\"} Employee</h3>\n            <div className=\"card-body\">\n                <form className=\"form\" onSubmit={saveOrUpdateEmployee}>\n                    <div className=\"form-group\">\n                        <label>First Name</label>\n                        <input \n                            type=\"text\" \n                            placeholder=\"First Name\" \n                            name=\"firstName\" \n                            className=\"form-control\" \n                            value={firstName} \n                            onChange={changeFirstNameHandler} \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Last Name</label>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Last Name\" \n                            name=\"lastName\" \n                            className=\"form-control\" \n                            value={lastName} \n                            onChange={changeLastNameHandler} \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Email</label>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Email\" \n                            name=\"email\" \n                            className=\"form-control\" \n                            value={email} \n                            onChange={changeEmailHandler} \n                        />\n                    </div>\n                    <div className=\"button-group\">\n                        <button type=\"submit\" className=\"btn btn-success\">Save</button>\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={cancel}>Cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n        </>\n    );\n}\nexport default CreateOrUpdateEmployee;","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Components/HeaderComponent.jsx",[],[],"/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Components/FooterComponent.jsx",[],[],"/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Components/ListEmployee.jsx",["52"],[],"import { useEffect, useState } from \"react\";\nimport EmployeeService from \"../Services/EmployeeService\";\nimport { useNavigate } from \"react-router-dom\";\nimport ViewEmployee from \"./ViewEmployee\";\n\nconst ListEmployee = () => {\n    const navigate = useNavigate();\n    const [employees,setEmployees] = useState([]);\n    const editEmployee = (employeeId) => {\n        navigate(`add-employee/${employeeId}`)\n    }\n    const deleteEmployee = (employeeId) => {\n        EmployeeService.DeleteEmployee(employeeId).then(() => {\n            setEmployees(employees.filter(emp => emp.id !== employeeId));\n        });\n    }\n    const viewEmployee = (employeeId) => {\n        navigate(`view-employee/${employeeId}`);\n    }\n    useEffect(()=>{\n        EmployeeService.getEmployees().then((res) => {\n            setEmployees(res.data);\n        }).catch(err => console.log(err));\n    },[]);\n    return(\n        <>\n        <h2 className=\"text-center\">Employees</h2>\n        <div className=\"row\">\n            <table className=\"table table-striped table-bordered\">\n                <thead>\n                    <tr>\n                    <th>Employee FirstName</th>\n                    <th>Employee LastName</th>\n                    <th>Employee Email</th>\n                    <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        employees.map(\n                            employee => \n                            <tr key= {employee.id}>\n                                <td key={employee.firstName}>{employee.firstName}</td>\n                                <td key={employee.lastName}>{employee.lastName}</td>\n                                <td key={employee.email}>{employee.email}</td>\n                                <td><button className=\"btn btn-info\" onClick={()=>editEmployee(employee.id)}>Update</button>\n                                <button className=\"btn btn-danger\" onClick={() => deleteEmployee(employee.id)}>Delete</button>\n                                <button className=\"btn btn-secondary\" onClick={() => viewEmployee(employee.id)}>View</button>\n                                </td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n        </>\n    );\n}\nexport default ListEmployee;","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Components/ViewEmployee.jsx",["53","54"],[],"import { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport EmployeeService from \"../Services/EmployeeService\";\n\nconst ViewEmployee = () => {\n    const {id} = useParams();\n    const navigate = useNavigate();\n    const [employee, setEmployee] = useState({});\n    useEffect(() => {\n        EmployeeService.getEmployeeById(id).then( (res) =>{\n            setEmployee(res.data);\n            console.log(employee)\n        }).catch(err => console.log(err));\n    },[]);\n    return(\n    <>\n      <div class=\"card\" style={{\"width\": \"18rem\",\"marginTop\":\"4rem\",\"marginLeft\":\"auto\",\"marginRight\":\"auto\"}}>\n        <img class=\"card-img-top\" style={{\"border\":\"2px solid\"}} src=\"https://www.svgrepo.com/show/33058/employee.svg\" alt=\"Card image cap\"/>\n        <div class=\"card-body\">\n        <h5 class=\"card-title\">Employee details </h5>\n        <ul class=\"list-group list-group-flush\">\n        <li class=\"list-group-item\">First Name: {employee.firstName}</li>\n        <li class=\"list-group-item\">Last Name: {employee.lastName}</li>\n        <li class=\"list-group-item\">Email: {employee.email}</li>\n        </ul>\n        <button onClick={()=>{navigate('/')}} class=\"btn btn-primary\">back</button>\n        </div>\n     </div>\n    </>\n    );\n}\nexport default ViewEmployee;","/Users/mak/Documents/code/crud-reactjs-springboot-demo/react-front-end/src/Services/EmployeeService.js",["55"],[],"import axios from 'axios';\nconst EMPLOYEE_BASE_URL = \"http://localhost:6868/api/employees\"\nclass EmployeeService {\n    getEmployees() {\n        return axios.get(EMPLOYEE_BASE_URL);\n    }\n    createEmployee(employee) {\n        return axios.post(EMPLOYEE_BASE_URL,employee)\n    }\n    getEmployeeById(employeeId) {\n        return axios.get(EMPLOYEE_BASE_URL+'/'+employeeId);\n    }\n    updateEmployee(employeeId,employee) {\n        return axios.put(EMPLOYEE_BASE_URL+'/'+employeeId,employee);\n    }\n    DeleteEmployee(employeeId) {\n        return axios.delete(EMPLOYEE_BASE_URL+'/'+employeeId);\n    }\n}\nexport default new EmployeeService();",{"ruleId":"56","severity":1,"message":"57","line":47,"column":7,"nodeType":"58","endLine":47,"endColumn":9,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":20},{"ruleId":"56","severity":1,"message":"64","line":14,"column":7,"nodeType":"58","endLine":14,"endColumn":9,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":18,"column":9,"nodeType":"68","endLine":18,"endColumn":142},{"ruleId":"69","severity":1,"message":"70","line":20,"column":1,"nodeType":"71","endLine":20,"endColumn":38},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-unused-vars","'ViewEmployee' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'employee' and 'id'. Either include them or remove the dependency array.",["73"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [id]",{"range":"78","text":"79"},"Update the dependencies array to be: [employee, id]",{"range":"80","text":"81"},[1547,1549],"[id]",[508,510],"[employee, id]"]