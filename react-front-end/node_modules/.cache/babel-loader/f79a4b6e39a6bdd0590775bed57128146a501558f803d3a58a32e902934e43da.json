{"ast":null,"code":"var _jsxFileName = \"/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/src/Components/EmployeeList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 10;\nconst styles = `\n.employee-list-container {\n  max-width: 900px;\n  margin: 30px auto;\n  padding: 25px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-color: #f4f7f6;\n  border-radius: 10px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n}\n\n.employee-list-container h1 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 25px;\n}\n\n.employee-card-div {\n  border: 1px solid #d1d5db; \n  border-radius: 8px; \n  padding: 16px; \n  margin-bottom: 20px;\n  background-color: #ffffff; \n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); \n  transition: box-shadow 0.2s ease-in-out;\n}\n\n.employee-card-div:hover {\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); \n}\n\n.employee-details-table {\n  width: 100%;\n  border-collapse: collapse; \n  margin-bottom: 10px;\n}\n\n.employee-details-table th,\n.employee-details-table td {\n  padding: 8px 12px; \n  text-align: left;\n  font-size: 0.9em; \n  border-bottom: 1px solid #e5e7eb; \n}\n\n.employee-details-table th {\n  font-weight: 600; \n  color: #4b5563; \n  width: 30%;\n}\n\n.employee-details-table td {\n  color: #1f2937; \n}\n\n.employee-details-table input[type=\"text\"],\n.employee-details-table input[type=\"date\"],\n.employee-details-table input[type=\"email\"],\n.employee-details-table input[type=\"tel\"] {\n  width: calc(100% - 16px); /* Adjust for padding */\n  padding: 6px 8px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 1em; /* Match td font-size */\n  box-sizing: border-box;\n}\n\n\n.employee-details-table tr:last-child th,\n.employee-details-table tr:last-child td {\n  border-bottom: none;\n}\n\n.action-buttons {\n  margin-top: 12px;\n  display: flex;\n  gap: 10px; /* Space between buttons */\n}\n\n.action-buttons button {\n  border: 1px solid transparent;\n  padding: 6px 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 0.85em;\n  transition: background-color 0.2s, border-color 0.2s;\n}\n\n.edit-button {\n  background-color: #3b82f6; /* Tailwind blue-500 */\n  color: white;\n}\n.edit-button:hover {\n  background-color: #2563eb; /* Tailwind blue-600 */\n}\n\n.save-button {\n  background-color: #10b981; /* Tailwind green-500 */\n  color: white;\n}\n.save-button:hover {\n  background-color: #059669; /* Tailwind green-600 */\n}\n\n.cancel-button {\n  background-color: #ef4444; /* Tailwind red-500 */\n  color: white;\n}\n.cancel-button:hover {\n  background-color: #dc2626; /* Tailwind red-600 */\n}\n\n\n.loader,\n.end-message,\n.no-employees {\n  padding: 25px;\n  text-align: center;\n  color: #666;\n  font-style: italic;\n}\n\n.no-employees {\n  font-weight: bold;\n}\n`;\n\n// Helper function to generate some mock data for new fields\nconst getMockExtraData = employeeId => {\n  const departments = [\"Engineering\", \"Marketing\", \"Sales\", \"Human Resources\", \"Finance\"];\n  const baseYear = 2015;\n  const idNum = parseInt(String(employeeId).slice(-1) || \"0\", 10);\n  return {\n    department: departments[employeeId % departments.length],\n    email: `employee${employeeId}@example.com`,\n    phoneNumber: `555-01${String(employeeId % 100).padStart(2, '0')}`,\n    hireDate: `${baseYear + employeeId % 8}-${String(employeeId % 12 + 1).padStart(2, '0')}-${String(employeeId % 28 + 1).padStart(2, '0')}`\n  };\n};\nfunction EmployeeList() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [isLoadingState, setIsLoadingState] = useState(false);\n  const [hasMoreState, setHasMoreState] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalItemsFetchedSoFar, setTotalItemsFetchedSoFar] = useState(0);\n\n  // State for managing edit mode and form data\n  const [editingEmployeeId, setEditingEmployeeId] = useState(null); // ID of the employee being edited\n  const [editFormData, setEditFormData] = useState({}); // Form data for the employee being edited\n\n  const isLoadingRef = useRef(isLoadingState);\n  const hasMoreRef = useRef(hasMoreState);\n  useEffect(() => {\n    isLoadingRef.current = isLoadingState;\n  }, [isLoadingState]);\n  useEffect(() => {\n    hasMoreRef.current = hasMoreState;\n  }, [hasMoreState]);\n  const fetchEmployeesAPI = useCallback(async pageToFetch => {\n    if (isLoadingRef.current || pageToFetch > 0 && !hasMoreRef.current) {\n      return;\n    }\n    setIsLoadingState(true);\n    try {\n      const response = await axios.get(`http://localhost:6868/api/employees`, {\n        params: {\n          page: pageToFetch,\n          size: PAGE_SIZE\n        }\n      });\n      const data = response.data;\n      if (data.content && data.content.length > 0) {\n        const newItemsCount = data.content.length;\n        setTotalItemsFetchedSoFar(prevTotal => prevTotal + newItemsCount);\n        // Augment with mock data upon fetch\n        const augmentedContent = data.content.map(emp => ({\n          ...emp,\n          ...getMockExtraData(emp.id) // Add mock data here\n        }));\n\n        setEmployees(prevEmployees => pageToFetch === 0 ? augmentedContent : [...prevEmployees, ...augmentedContent]);\n        setHasMoreState(!data.last);\n        setCurrentPage(pageToFetch + 1);\n      } else {\n        setHasMoreState(false);\n        if (pageToFetch === 0) {\n          setEmployees([]);\n          setTotalItemsFetchedSoFar(0);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch employees:\", error);\n      setHasMoreState(false);\n    } finally {\n      setIsLoadingState(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    setEmployees([]);\n    setCurrentPage(0);\n    setHasMoreState(true);\n    setIsLoadingState(false);\n    setTotalItemsFetchedSoFar(0);\n    fetchEmployeesAPI(0);\n  }, [fetchEmployeesAPI]);\n  const loadMoreEmployees = () => {\n    if (!isLoadingRef.current && hasMoreRef.current) {\n      fetchEmployeesAPI(currentPage);\n    }\n  };\n\n  // --- Edit Mode Functions ---\n  const handleEdit = employee => {\n    setEditingEmployeeId(employee.id);\n    // Initialize form data with current employee data (including mock data)\n    setEditFormData({\n      ...employee\n    });\n  };\n  const handleCancelEdit = () => {\n    setEditingEmployeeId(null);\n    setEditFormData({});\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSave = async employeeId => {\n    console.log(\"Saving employee:\", employeeId, \"Data:\", editFormData);\n    // Construct the payload. Only send fields that your backend expects.\n    // For this example, we'll send the core fields and the mock fields.\n    // Your backend needs to be able to handle these fields or ignore unknown ones.\n    const payload = {\n      firstName: editFormData.firstName,\n      lastName: editFormData.lastName,\n      birthDate: editFormData.birthDate,\n      // Include mock fields if your backend is designed to accept/update them\n      department: editFormData.department,\n      email: editFormData.email,\n      phoneNumber: editFormData.phoneNumber,\n      hireDate: editFormData.hireDate\n    };\n    try {\n      // Make PATCH request\n      const response = await axios.patch(`http://localhost:6868/api/employees/${employeeId}`, payload);\n\n      // Update local state with the response from the server (which should be the updated employee)\n      setEmployees(prevEmployees => prevEmployees.map(emp => emp.id === employeeId ? {\n        ...emp,\n        ...response.data\n      } : emp\n      // If your PATCH returns only the updated fields, merge carefully:\n      // emp.id === employeeId ? { ...emp, ...payload, ...response.data } : emp \n      ));\n\n      console.log(\"Update successful:\", response.data);\n      setEditingEmployeeId(null); // Exit edit mode\n      setEditFormData({});\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error(\"Failed to update employee:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      // Optionally, show an error message to the user\n      alert(`Error saving employee: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: styles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Employee Directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: totalItemsFetchedSoFar,\n        next: loadMoreEmployees,\n        hasMore: hasMoreState,\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading more employees...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 19\n        }, this),\n        endMessage: !hasMoreState && employees.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: \"end-message\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"You've reached the end of the list!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 18\n        }, this),\n        children: employees.map(employee => {\n          const isEditing = editingEmployeeId === employee.id;\n          // Use editFormData if editing, otherwise use employee data from the list\n          const displayData = isEditing ? editFormData : employee;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-card-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"employee-details-table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: displayData.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"First Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"firstName\",\n                      value: displayData.firstName || '',\n                      onChange: handleInputChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 27\n                    }, this) : displayData.firstName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Last Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"lastName\",\n                      value: displayData.lastName || '',\n                      onChange: handleInputChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 27\n                    }, this) : displayData.lastName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Birth Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"date\",\n                      name: \"birthDate\",\n                      value: displayData.birthDate || '',\n                      onChange: handleInputChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 27\n                    }, this) : displayData.birthDate ? new Date(displayData.birthDate).toLocaleDateString() : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Department:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"department\",\n                      value: displayData.department || '',\n                      onChange: handleInputChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 27\n                    }, this) : displayData.department\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      name: \"email\",\n                      value: displayData.email || '',\n                      onChange: handleInputChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 27\n                    }, this) : displayData.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"tel\",\n                      name: \"phoneNumber\",\n                      value: displayData.phoneNumber || '',\n                      onChange: handleInputChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 27\n                    }, this) : displayData.phoneNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Hire Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"date\",\n                      name: \"hireDate\",\n                      value: displayData.hireDate || '',\n                      onChange: handleInputChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 378,\n                      columnNumber: 27\n                    }, this) : displayData.hireDate ? new Date(displayData.hireDate).toLocaleDateString() : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-buttons\",\n              children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSave(employee.id),\n                  className: \"save-button\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleCancelEdit,\n                  className: \"cancel-button\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(employee),\n                className: \"edit-button\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), !isLoadingState && employees.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-employees\",\n        children: hasMoreState ? \"Fetching initial data...\" : \"No employees found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), isLoadingState && employees.length === 0 && hasMoreState && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading initial employees...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EmployeeList, \"lKKtUfIucbbhjwICFRSxevNOLgo=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","InfiniteScroll","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PAGE_SIZE","styles","getMockExtraData","employeeId","departments","baseYear","idNum","parseInt","String","slice","department","length","email","phoneNumber","padStart","hireDate","EmployeeList","_s","employees","setEmployees","isLoadingState","setIsLoadingState","hasMoreState","setHasMoreState","currentPage","setCurrentPage","totalItemsFetchedSoFar","setTotalItemsFetchedSoFar","editingEmployeeId","setEditingEmployeeId","editFormData","setEditFormData","isLoadingRef","hasMoreRef","current","fetchEmployeesAPI","pageToFetch","response","get","params","page","size","data","content","newItemsCount","prevTotal","augmentedContent","map","emp","id","prevEmployees","last","error","console","loadMoreEmployees","handleEdit","employee","handleCancelEdit","handleInputChange","e","name","value","target","prevData","handleSave","log","payload","firstName","lastName","birthDate","patch","_error$response","_error$response2","_error$response2$data","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","dataLength","next","hasMore","loader","endMessage","style","textAlign","isEditing","displayData","type","onChange","Date","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["/Users/mak/Documents/code/crud-springboot-reactjs-docker/react-front-end/src/Components/EmployeeList.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport axios from 'axios';\n\nconst PAGE_SIZE = 10;\n\nconst styles = `\n.employee-list-container {\n  max-width: 900px;\n  margin: 30px auto;\n  padding: 25px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-color: #f4f7f6;\n  border-radius: 10px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n}\n\n.employee-list-container h1 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 25px;\n}\n\n.employee-card-div {\n  border: 1px solid #d1d5db; \n  border-radius: 8px; \n  padding: 16px; \n  margin-bottom: 20px;\n  background-color: #ffffff; \n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); \n  transition: box-shadow 0.2s ease-in-out;\n}\n\n.employee-card-div:hover {\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); \n}\n\n.employee-details-table {\n  width: 100%;\n  border-collapse: collapse; \n  margin-bottom: 10px;\n}\n\n.employee-details-table th,\n.employee-details-table td {\n  padding: 8px 12px; \n  text-align: left;\n  font-size: 0.9em; \n  border-bottom: 1px solid #e5e7eb; \n}\n\n.employee-details-table th {\n  font-weight: 600; \n  color: #4b5563; \n  width: 30%;\n}\n\n.employee-details-table td {\n  color: #1f2937; \n}\n\n.employee-details-table input[type=\"text\"],\n.employee-details-table input[type=\"date\"],\n.employee-details-table input[type=\"email\"],\n.employee-details-table input[type=\"tel\"] {\n  width: calc(100% - 16px); /* Adjust for padding */\n  padding: 6px 8px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 1em; /* Match td font-size */\n  box-sizing: border-box;\n}\n\n\n.employee-details-table tr:last-child th,\n.employee-details-table tr:last-child td {\n  border-bottom: none;\n}\n\n.action-buttons {\n  margin-top: 12px;\n  display: flex;\n  gap: 10px; /* Space between buttons */\n}\n\n.action-buttons button {\n  border: 1px solid transparent;\n  padding: 6px 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 0.85em;\n  transition: background-color 0.2s, border-color 0.2s;\n}\n\n.edit-button {\n  background-color: #3b82f6; /* Tailwind blue-500 */\n  color: white;\n}\n.edit-button:hover {\n  background-color: #2563eb; /* Tailwind blue-600 */\n}\n\n.save-button {\n  background-color: #10b981; /* Tailwind green-500 */\n  color: white;\n}\n.save-button:hover {\n  background-color: #059669; /* Tailwind green-600 */\n}\n\n.cancel-button {\n  background-color: #ef4444; /* Tailwind red-500 */\n  color: white;\n}\n.cancel-button:hover {\n  background-color: #dc2626; /* Tailwind red-600 */\n}\n\n\n.loader,\n.end-message,\n.no-employees {\n  padding: 25px;\n  text-align: center;\n  color: #666;\n  font-style: italic;\n}\n\n.no-employees {\n  font-weight: bold;\n}\n`;\n\n// Helper function to generate some mock data for new fields\nconst getMockExtraData = (employeeId) => {\n    const departments = [\"Engineering\", \"Marketing\", \"Sales\", \"Human Resources\", \"Finance\"];\n    const baseYear = 2015;\n    const idNum = parseInt(String(employeeId).slice(-1) || \"0\", 10); \n    \n    return {\n        department: departments[employeeId % departments.length],\n        email: `employee${employeeId}@example.com`,\n        phoneNumber: `555-01${String(employeeId % 100).padStart(2, '0')}`,\n        hireDate: `${baseYear + (employeeId % 8)}-${String((employeeId % 12) + 1).padStart(2, '0')}-${String((employeeId % 28) + 1).padStart(2, '0')}`\n    };\n};\n\n\nfunction EmployeeList() {\n  const [employees, setEmployees] = useState([]);\n  const [isLoadingState, setIsLoadingState] = useState(false);\n  const [hasMoreState, setHasMoreState] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalItemsFetchedSoFar, setTotalItemsFetchedSoFar] = useState(0);\n\n  // State for managing edit mode and form data\n  const [editingEmployeeId, setEditingEmployeeId] = useState(null); // ID of the employee being edited\n  const [editFormData, setEditFormData] = useState({}); // Form data for the employee being edited\n\n  const isLoadingRef = useRef(isLoadingState);\n  const hasMoreRef = useRef(hasMoreState);\n\n  useEffect(() => {\n    isLoadingRef.current = isLoadingState;\n  }, [isLoadingState]);\n\n  useEffect(() => {\n    hasMoreRef.current = hasMoreState;\n  }, [hasMoreState]);\n\n  const fetchEmployeesAPI = useCallback(async (pageToFetch) => {\n    if (isLoadingRef.current || (pageToFetch > 0 && !hasMoreRef.current)) {\n      return;\n    }\n    setIsLoadingState(true);\n    try {\n      const response = await axios.get(`http://localhost:6868/api/employees`, {\n        params: { page: pageToFetch, size: PAGE_SIZE }\n      });\n      const data = response.data;\n      if (data.content && data.content.length > 0) {\n        const newItemsCount = data.content.length;\n        setTotalItemsFetchedSoFar(prevTotal => prevTotal + newItemsCount);\n        // Augment with mock data upon fetch\n        const augmentedContent = data.content.map(emp => ({\n            ...emp,\n            ...getMockExtraData(emp.id) // Add mock data here\n        }));\n        setEmployees(prevEmployees => \n            pageToFetch === 0 ? augmentedContent : [...prevEmployees, ...augmentedContent]\n        );\n        setHasMoreState(!data.last);\n        setCurrentPage(pageToFetch + 1);\n      } else {\n        setHasMoreState(false);\n        if (pageToFetch === 0) {\n            setEmployees([]);\n            setTotalItemsFetchedSoFar(0);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch employees:\", error);\n      setHasMoreState(false);\n    } finally {\n      setIsLoadingState(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); \n\n  useEffect(() => {\n    setEmployees([]);\n    setCurrentPage(0);\n    setHasMoreState(true);\n    setIsLoadingState(false);\n    setTotalItemsFetchedSoFar(0);\n    fetchEmployeesAPI(0);\n  }, [fetchEmployeesAPI]);\n\n  const loadMoreEmployees = () => {\n    if (!isLoadingRef.current && hasMoreRef.current) {\n      fetchEmployeesAPI(currentPage);\n    }\n  };\n\n  // --- Edit Mode Functions ---\n  const handleEdit = (employee) => {\n    setEditingEmployeeId(employee.id);\n    // Initialize form data with current employee data (including mock data)\n    setEditFormData({ ...employee }); \n  };\n\n  const handleCancelEdit = () => {\n    setEditingEmployeeId(null);\n    setEditFormData({});\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  const handleSave = async (employeeId) => {\n    console.log(\"Saving employee:\", employeeId, \"Data:\", editFormData);\n    // Construct the payload. Only send fields that your backend expects.\n    // For this example, we'll send the core fields and the mock fields.\n    // Your backend needs to be able to handle these fields or ignore unknown ones.\n    const payload = {\n        firstName: editFormData.firstName,\n        lastName: editFormData.lastName,\n        birthDate: editFormData.birthDate,\n        // Include mock fields if your backend is designed to accept/update them\n        department: editFormData.department,\n        email: editFormData.email,\n        phoneNumber: editFormData.phoneNumber,\n        hireDate: editFormData.hireDate,\n    };\n\n    try {\n      // Make PATCH request\n      const response = await axios.patch(`http://localhost:6868/api/employees/${employeeId}`, payload);\n      \n      // Update local state with the response from the server (which should be the updated employee)\n      setEmployees(prevEmployees => \n        prevEmployees.map(emp => \n          emp.id === employeeId ? { ...emp, ...response.data } : emp\n          // If your PATCH returns only the updated fields, merge carefully:\n          // emp.id === employeeId ? { ...emp, ...payload, ...response.data } : emp \n        )\n      );\n      console.log(\"Update successful:\", response.data);\n      setEditingEmployeeId(null); // Exit edit mode\n      setEditFormData({});\n    } catch (error) {\n      console.error(\"Failed to update employee:\", error.response?.data || error.message);\n      // Optionally, show an error message to the user\n      alert(`Error saving employee: ${error.response?.data?.message || error.message}`);\n    }\n  };\n\n  return (\n    <>\n      <style>{styles}</style>\n      <div className=\"employee-list-container\">\n        <h1>Employee Directory</h1>\n        <InfiniteScroll\n          dataLength={totalItemsFetchedSoFar}\n          next={loadMoreEmployees}\n          hasMore={hasMoreState}\n          loader={<div className=\"loader\"><h4>Loading more employees...</h4></div>}\n          endMessage={\n            !hasMoreState && employees.length > 0 && (\n                 <p style={{ textAlign: 'center' }} className=\"end-message\">\n                    <b>You've reached the end of the list!</b>\n                 </p>\n            )\n          }\n        >\n          {employees.map(employee => {\n            const isEditing = editingEmployeeId === employee.id;\n            // Use editFormData if editing, otherwise use employee data from the list\n            const displayData = isEditing ? editFormData : employee;\n\n            return (\n              <div key={employee.id} className=\"employee-card-div\">\n                <table className=\"employee-details-table\">\n                  <tbody>\n                    <tr>\n                      <th>ID:</th>\n                      <td>{displayData.id}</td>\n                    </tr>\n                    <tr>\n                      <th>First Name:</th>\n                      <td>\n                        {isEditing ? (\n                          <input type=\"text\" name=\"firstName\" value={displayData.firstName || ''} onChange={handleInputChange} />\n                        ) : (\n                          displayData.firstName\n                        )}\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>Last Name:</th>\n                      <td>\n                        {isEditing ? (\n                          <input type=\"text\" name=\"lastName\" value={displayData.lastName || ''} onChange={handleInputChange} />\n                        ) : (\n                          displayData.lastName\n                        )}\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>Birth Date:</th>\n                      <td>\n                        {isEditing ? (\n                          <input type=\"date\" name=\"birthDate\" value={displayData.birthDate || ''} onChange={handleInputChange} />\n                        ) : (\n                          displayData.birthDate ? new Date(displayData.birthDate).toLocaleDateString() : 'N/A'\n                        )}\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>Department:</th>\n                      <td>\n                        {isEditing ? (\n                          <input type=\"text\" name=\"department\" value={displayData.department || ''} onChange={handleInputChange} />\n                        ) : (\n                          displayData.department\n                        )}\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>Email:</th>\n                      <td>\n                        {isEditing ? (\n                          <input type=\"email\" name=\"email\" value={displayData.email || ''} onChange={handleInputChange} />\n                        ) : (\n                          displayData.email\n                        )}\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>Phone:</th>\n                      <td>\n                        {isEditing ? (\n                          <input type=\"tel\" name=\"phoneNumber\" value={displayData.phoneNumber || ''} onChange={handleInputChange} />\n                        ) : (\n                          displayData.phoneNumber\n                        )}\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>Hire Date:</th>\n                      <td>\n                        {isEditing ? (\n                          <input type=\"date\" name=\"hireDate\" value={displayData.hireDate || ''} onChange={handleInputChange} />\n                        ) : (\n                          displayData.hireDate ? new Date(displayData.hireDate).toLocaleDateString() : 'N/A'\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n                <div className=\"action-buttons\">\n                  {isEditing ? (\n                    <>\n                      <button onClick={() => handleSave(employee.id)} className=\"save-button\">Save</button>\n                      <button onClick={handleCancelEdit} className=\"cancel-button\">Cancel</button>\n                    </>\n                  ) : (\n                    <button onClick={() => handleEdit(employee)} className=\"edit-button\">Edit</button>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </InfiniteScroll>\n        \n        {!isLoadingState && employees.length === 0 && (\n          <p className=\"no-employees\">\n            {hasMoreState ? \"Fetching initial data...\" : \"No employees found.\"}\n          </p>\n        )}\n        {isLoadingState && employees.length === 0 && hasMoreState && ( \n            <div className=\"loader\"><h4>Loading initial employees...</h4></div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default EmployeeList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}